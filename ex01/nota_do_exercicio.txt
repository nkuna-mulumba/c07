üéØ Objetivo do exerc√≠cio ft_range
    Criar uma fun√ß√£o que devolve um ponteiro para um array de inteiros contendo 
    todos os valores entre min (inclusivo) e max (exclusivo), com aloca√ß√£o 
    din√¢mica usando malloc. Esse exerc√≠cio treina a capacidade de gerar dados 
    programaticamente, calcular tamanhos corretos e manipular ponteiros com 
    seguran√ßa.

‚úÖ Pontos positivos
   - Ensina como usar malloc para criar arrays din√¢micos.
   - Refor√ßa l√≥gica matem√°tica simples (max - min).
   - Desenvolve controle de fluxo e la√ßos.
   - √ötil para pensar em sequ√™ncias geradas automaticamente.
   - F√°cil de testar com main simples e printf.

‚ùå Pontos negativos
    - Pode gerar vazamento de mem√≥ria se o array n√£o for liberado com free.
    - Confus√£o comum entre incluir ou excluir o max.
    - Se n√£o tratar min >= max, pode alocar mem√≥ria desnecess√°ria ou retornar dados errados.
    - Alguns erram ao calcular o tamanho do array ou preench√™-lo corretamente.


üïí Quando pode ser usado
    - Gerar faixas num√©ricas (por exemplo, [0‚Äì9] ou [-3‚Äì3]).
    - Criar listas para testes, contadores ou simula√ß√£o de dados.
    - Preparar estruturas que exigem preenchimento sequencial.
    - Inicializar valores em estruturas como matrizes, tabuleiros ou menus.
    - Implementar fun√ß√µes auxiliares em algoritmos, como sort ou filtragem.

üèãÔ∏è‚Äç‚ôÇÔ∏è 5 exerc√≠cios b√°sicos para praticar e entender melhor
    1 Crie uma fun√ß√£o que exibe os valores de um array de inteiros passado por 
        ponteiro e tamanho.
      - Ajuda a visualizar os dados gerados por ft_range.
    2. Implemente ft_range_reverse(min, max) que gera os n√∫meros em ordem
        decrescente.
        - Faz pensar na l√≥gica invertida.
    3. Escreva uma fun√ß√£o que conta quantos n√∫meros existem entre min e max, sem
        incluir max.
        - Fortalece entendimento do c√°lculo max - min.
    4. Teste ft_range com casos como min = max ou min > max, e exiba uma mensagem.
        Refor√ßa tratamento de entrada inv√°lida.
    5. Use ft_range para gerar um intervalo e calcule a soma dos elementos.
        - Pr√°tica com arrays e l√≥gica agregadora.