üìò Introdu√ß√£o Breve
    O exerc√≠cio ft_range prop√µe criar uma fun√ß√£o que gere um array de 
    inteiros com valores entre min (inclusive) e max (exclusivo).
    A fun√ß√£o deve alocar dinamicamente mem√≥ria para armazenar esses
    valores em sequ√™ncia, retornando um ponteiro para o in√≠cio do array.
    √â um √≥timo exerc√≠cio introdut√≥rio para compreens√£o de aloca√ß√£o de 
    mem√≥ria, uso de ponteiros e manipula√ß√£o de arrays em C.


‚úÖ Pontos Positivos
    - Pr√°tica com mem√≥ria din√¢mica: Trabalha com malloc, essencial para
        programadores em C.
    - Dom√≠nio de ponteiros: Promove entendimento sobre como manipular
        endere√ßos e refer√™ncias.
    - L√≥gica sequencial: Ajuda a fixar a ideia de intervalos num√©ricos
        e preenchimento de vetores.
    - Controle de erros: Treina o retorno de NULL em casos inv√°lidos ou
        falhas.
    - Modularidade: Incentiva o uso de fun√ß√µes reutiliz√°veis para
        opera√ß√µes com arrays.


‚ùå Pontos Negativos
    - Sem verifica√ß√£o de overflow: Pode haver riscos se max - min ultrapassar
        limites de int.
    - Aus√™ncia de tratamento avan√ßado de erros: Aloca√ß√£o mal-sucedida n√£o
        mostra motivo.
    - N√£o integra outras estruturas: Funciona s√≥ com arrays simples, sem
        intera√ß√£o com structs ou fun√ß√µes mais complexas.
    - Uso limitado no mundo real: Arrays com valores sequenciais s√£o √∫teis
        em casos espec√≠ficos, mas poucos cen√°rios exigem isso diretamente.


üí° Quando Usar Este Tipo de Fun√ß√£o
    - Gera√ß√£o de valores sequenciais: Como √≠ndices, simula√ß√µes ou testes.
    - Inicializa√ß√£o de arrays: Para criar valores entre limites definidos.
    - Ferramentas de ordena√ß√£o ou busca: √ötil ao preparar dados ordenados
        para algoritmos.
    - Cria√ß√£o de mapas num√©ricos: Ao montar estruturas para representar
        tabuleiros, grids ou estat√≠sticas.
    - Simula√ß√£o de comportamento linear: Em jogos, f√≠sica ou estat√≠stica
        simples.


üß† Enunciados Simples para Fixar a L√≥gica
1. Crie uma fun√ß√£o que devolve um array contendo n√∫meros de 0 a 9.
2. Gere um array com todos os inteiros entre -5 e 5 (excluindo o 5).
3. Crie uma fun√ß√£o que retorna NULL se min for maior ou igual a max.
4. Altere a fun√ß√£o para que ela preencha o array com valores
    decrescentes entre max e min.
5. Escreva uma fun√ß√£o que retorna um array com os n√∫meros pares entre
    10 e 20.